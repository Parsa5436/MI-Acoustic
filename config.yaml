# ===================================================================
# Hybrid Underwater Network Simulation Configuration
# Exact parameters as specified in the technical requirements
# ===================================================================

simulation:
  evaluation_ranges_m: [1, 5, 10, 20, 30, 50, 100, 200, 500]
  relay_hop_fraction: 0.5 # AUV positioned at midpoint (r/2)

  visualization:
    range_labels:
      ["1m", "5m", "10m", "20m", "30m", "50m", "100m", "200m", "500m"]
    figure_size: [16, 10]
    bar_width: 0.25
    y_axis_limits: [-50, 150]
    snr_clamp_threshold_db: -40.0
    style: "seaborn-v0_8-whitegrid"
    output_path: "hybrid_network_advantage_analysis.png"

# Table 1: MI (Magnetic Induction) Parameters - ENHANCED FOR CROSSOVER DEMONSTRATION
physical_layer:
  mi:
    carrier_frequency_hz: 100000 # f_m = 100 kHz
    transmit_power_watts: 10.0 # P_t^(m) = 10.0 W (enhanced for short-range superiority)
    bandwidth_hz: 10000 # B_m = 10 kHz
    noise_psd_w_hz: 0.0000000000000001 # N_0^(m) = 1e-16 W/Hz (lower noise)
    max_useful_range_m: 40.0 # R_MI = 40.0 m
    permeability_seawater: 0.00000125663706212 # μ = 1.25663706212e-6 H/m
    transmit_coil_turns: 20 # N_t = 20 turns (enhanced coupling)
    receive_coil_turns: 20 # N_r = 20 turns (enhanced coupling)
    transmit_coil_area_m2: 0.05 # A_t = 0.05 m² (larger coils)
    receive_coil_area_m2: 0.05 # A_r = 0.05 m² (larger coils)
    transmit_coil_resistance_ohm: 1.0 # R_t = 1.0 Ω
    receive_coil_resistance_ohm: 1.0 # R_r = 1.0 Ω

  # Table 2: Acoustic Parameters - ADJUSTED FOR CROSSOVER DEMONSTRATION
  acoustic:
    carrier_frequency_hz: 12000 # f_a = 12 kHz
    transmit_power_watts: 0.5 # P_t^(a) = 0.5 W (reduced for crossover)
    bandwidth_hz: 3000 # B_a = 3 kHz
    noise_psd_w_hz: 0.000000000000005 # N_0^(a) = 5e-15 W/Hz (higher noise)
    spreading_factor: 1.5 # k = 1.5
    transmit_gain: 1.0 # G_t = 1.0
    receive_gain: 1.0 # G_r = 1.0

# ===================================================================
# Game Theory Multi-Agent Optimization Layer Configuration
# ===================================================================

game_theory:
  # Multi-Agent Setup
  num_auvs: 3
  environment:
    dimensions: 3 # 3D underwater environment
    bounds:
      x_range: [0, 1000] # meters
      y_range: [0, 1000] # meters
      z_range: [10, 200] # underwater depth range

  # Fixed Infrastructure
  surface_station:
    position: [500, 500, 0] # Surface center position

  sensor_nodes:
    count: 5
    positions: # Underwater sensor locations
      - [100, 100, 50]
      - [200, 800, 75]
      - [700, 200, 60]
      - [800, 700, 45]
      - [400, 600, 80]
    data_generation_rate: 1.0 # packets/second per sensor

  # Utility Function Weights
  utility_weights:
    throughput: 1.0 # w_1 - reward for data delivery
    energy: 0.5 # w_2 - penalty for energy consumption
    delay: 0.2 # w_3 - penalty for data buffering delay

  # Energy Cost Model
  energy_costs:
    movement_per_meter: 0.1 # Joules/meter
    acoustic_transmit_per_packet: 5.0 # Joules/packet (high power)
    mi_transmit_per_packet: 0.05 # Joules/packet (low power)
    idle_per_second: 0.01 # Joules/sec (operational cost)
    relay_per_packet: 0.1 # Joules/packet (relay operation)

  # AUV Specifications
  auv_specs:
    initial_energy: 1000.0 # Joules
    buffer_capacity: 50 # Maximum packets in buffer
    movement_speed: 5.0 # m/s
    communication_range_mi: 40.0 # meters (matches physical layer)
    communication_range_acoustic: 1000.0 # meters

  # Learning Algorithm Configuration
  learning_algorithm:
    type: "iterative_best_response" # or "q_learning"
    iterations: 100
    convergence_threshold: 0.01 # Change in utility for convergence
    learning_rate: 0.1 # (for Q-learning)
    discount_factor: 0.9 # (for Q-learning)
    exploration_rate: 0.1 # (for Q-learning)

  # Simulation Parameters
  simulation:
    time_step_duration: 1.0 # seconds per iteration
    max_simulation_time: 500.0 # total simulation time
    convergence_check_interval: 10 # iterations between convergence checks

  # Visualization Settings
  visualization:
    plot_paths: true
    plot_utilities: true
    plot_convergence: true
    animation_enabled: false # Set to true for animated visualization
    output_directory: "game_theory_results"
